{
    "componentChunkName": "component---src-pages-getting-started-index-mdx",
    "path": "/getting-started/",
    "result": {"pageContext":{"frontmatter":{"title":"Descrizione del PoT","description":"Quick start guide for getting acclimated with gatsby-theme-carbon"},"relativePagePath":"/getting-started/index.mdx","titleType":"page","MdxNode":{"id":"713ecb2f-5324-5be2-b183-6eb15e0c5b06","children":[],"parent":"952f5843-df3b-5dcf-97a4-7e8f794bd560","internal":{"content":"---\ntitle: Descrizione del PoT\ndescription: Quick start guide for getting acclimated with gatsby-theme-carbon\n---\n\n<PageDescription>\n\n**What is a Proof of Technology?**\n\nProof of Technology sessions are complimentary classes to build\nunderstanding of IBM technology and software with practical\npresentations and hands-on lab exercises. \n\nWe will cover all the various components that are part of Cloud Pak for Integration. We will also discuss how these components can be used in combination. The following are the varies areas depending on your interest.\n<br/>\n\n*  **IBM App Connect**\n*  **IBM API Connect**\n*  **IBM DataPower Gateway**\n*  **IBM Event Streams**\n*  **IBM MQ Advanced**\n*  **IBM Aspera High Speed Transfer Server**\n\n\n**Cloud Pak for Integration is IBMs hybrid integration platform (HIP) that helps to solve**\n<br/>\n\n*  **Complexity of integration. Integrating where apps and data that now live in hybrid landscapes including on-prem, and multiple clouds**\n*  Need for speed. Agility in development, architecture, and operations aspects of integration\n* Developer sharing and re-use of **integration assets**\n* Unification of integration broad ranging integration technologies  e.g. iPaaS, API management, messaging, events\n* Easily portable to other clouds, since this can run on RedHat OpenShift. This allows you to install and operate the Pak identically across multiple cloud vendors. \n\n</PageDescription>\n\n## Lab section\nBefore starting the labs you should review the lab environment and the use of the VDI desktop you will be using along with the OCP cluster to complete the labs.\n\n**[Review Lab environment]().**\n\n## quello chesegue Solo per esempio \n\n1. **Create your site** – use the gatsby CLI to bootstrap your site with the\n   starter\n\n   ```sh\n   npx gatsby new my-carbon-site https://github.com/carbon-design-system/gatsby-starter-carbon-theme\n   ```\n\n2. **Start developing** – navigate into your directory with `cd my-carbon-site`.\n\n   Start it up using one of the following snippets. You can tell which command\n   to use based on the lock file at the root of your project (`yarn.lock` for\n   yarn and `package-lock.json` for npm). For yarn, type `yarn dev` for npm,\n   you’ll use `npm run dev`.\n\n3. **Make some changes!** – open [localhost:8000](//localhost:8000) in your\n   browser to see your site running.\n\n   Each of the Items in your side bar correlates to a MDX file in your\n   `src/pages/` directory. Navigate to a site and try editing the corresponding\n   markdown file. You’ll be able to see it update live!\n\n## 👀 Watch a newbie try it out\n\nThis is a demo of a new Carbon team member spinning up a Gatsby Theme Carbon\nsite while following the steps listed above. To forward through the\nintroduction, play from min `3:50`.\n\n<div style={{ border: '1px solid \t#c6c6c6' }}>\n  <Video title=\"Gatsby Theme Carbon Site Demo\" vimeoId=\"437931932\" />\n</div>\n\n## 🔍 What’s in here?\n\nLets check out the structure of our project\n\n    .\n    ├── LICENSE\n    ├── README.md\n    ├── gatsby-config.js\n    ├── node_modules\n    ├── package.json\n    ├── public\n    ├── src\n    │   ├── data\n    │   ├── gatsby-theme-carbon\n    │   ├── images\n    │   └── pages\n    └── yarn.lock\n\n1.  **`/node_modules`**: This directory contains all of the modules of code that\n    your project depends on (npm packages) are automatically installed.\n\n1.  **`/src`**: This directory will contain all of the code related to what you\n    will see on the front-end of your site.\n\n    - **data** this is where you’ll update your sidebar order and contents\n    - **images** you can colocate your images here or store them next to your\n      pages, whichver you chose\n    - **gatsby-theme-carbon** this is where you’ll override (known as shadowing)\n      the default `gatsby-theme-carbon` components\n    - **pages** This is where most of your content will live. You’ll represent\n      each page with an MDX file.\n\n1.  **`.gitignore`**: This file tells git which files it should not track / not\n    maintain a version history for.\n\n1.  **`gatsby-config.js`**: This is the main configuration file for a Gatsby\n    site. This is where you can specify information about your site (metadata)\n    like the site title and description. You’ll notice that all of the\n    configuration for the site is coming from `gatsby-theme-carbon`\n\n1.  **`LICENSE`**: Gatsby is licensed under the Apache 2.0 license.\n\n1.  **`yarn.lock`** (See `package.json` below, first). This is an automatically\n    generated file based on the exact versions of your npm dependencies that\n    were installed for your project. **(You won’t change this file directly).**\n\n1.  **`package.json`**: A manifest file for Node.js projects, which includes\n    things like metadata (the project’s name, author, etc). This manifest is how\n    npm knows which packages to install for your project.\n","type":"Mdx","contentDigest":"a674862861227aa47c9e8804d87762b1","owner":"gatsby-plugin-mdx","counter":650},"frontmatter":{"title":"Descrizione del PoT","description":"Quick start guide for getting acclimated with gatsby-theme-carbon"},"exports":{},"rawBody":"---\ntitle: Descrizione del PoT\ndescription: Quick start guide for getting acclimated with gatsby-theme-carbon\n---\n\n<PageDescription>\n\n**What is a Proof of Technology?**\n\nProof of Technology sessions are complimentary classes to build\nunderstanding of IBM technology and software with practical\npresentations and hands-on lab exercises. \n\nWe will cover all the various components that are part of Cloud Pak for Integration. We will also discuss how these components can be used in combination. The following are the varies areas depending on your interest.\n<br/>\n\n*  **IBM App Connect**\n*  **IBM API Connect**\n*  **IBM DataPower Gateway**\n*  **IBM Event Streams**\n*  **IBM MQ Advanced**\n*  **IBM Aspera High Speed Transfer Server**\n\n\n**Cloud Pak for Integration is IBMs hybrid integration platform (HIP) that helps to solve**\n<br/>\n\n*  **Complexity of integration. Integrating where apps and data that now live in hybrid landscapes including on-prem, and multiple clouds**\n*  Need for speed. Agility in development, architecture, and operations aspects of integration\n* Developer sharing and re-use of **integration assets**\n* Unification of integration broad ranging integration technologies  e.g. iPaaS, API management, messaging, events\n* Easily portable to other clouds, since this can run on RedHat OpenShift. This allows you to install and operate the Pak identically across multiple cloud vendors. \n\n</PageDescription>\n\n## Lab section\nBefore starting the labs you should review the lab environment and the use of the VDI desktop you will be using along with the OCP cluster to complete the labs.\n\n**[Review Lab environment]().**\n\n## quello chesegue Solo per esempio \n\n1. **Create your site** – use the gatsby CLI to bootstrap your site with the\n   starter\n\n   ```sh\n   npx gatsby new my-carbon-site https://github.com/carbon-design-system/gatsby-starter-carbon-theme\n   ```\n\n2. **Start developing** – navigate into your directory with `cd my-carbon-site`.\n\n   Start it up using one of the following snippets. You can tell which command\n   to use based on the lock file at the root of your project (`yarn.lock` for\n   yarn and `package-lock.json` for npm). For yarn, type `yarn dev` for npm,\n   you’ll use `npm run dev`.\n\n3. **Make some changes!** – open [localhost:8000](//localhost:8000) in your\n   browser to see your site running.\n\n   Each of the Items in your side bar correlates to a MDX file in your\n   `src/pages/` directory. Navigate to a site and try editing the corresponding\n   markdown file. You’ll be able to see it update live!\n\n## 👀 Watch a newbie try it out\n\nThis is a demo of a new Carbon team member spinning up a Gatsby Theme Carbon\nsite while following the steps listed above. To forward through the\nintroduction, play from min `3:50`.\n\n<div style={{ border: '1px solid \t#c6c6c6' }}>\n  <Video title=\"Gatsby Theme Carbon Site Demo\" vimeoId=\"437931932\" />\n</div>\n\n## 🔍 What’s in here?\n\nLets check out the structure of our project\n\n    .\n    ├── LICENSE\n    ├── README.md\n    ├── gatsby-config.js\n    ├── node_modules\n    ├── package.json\n    ├── public\n    ├── src\n    │   ├── data\n    │   ├── gatsby-theme-carbon\n    │   ├── images\n    │   └── pages\n    └── yarn.lock\n\n1.  **`/node_modules`**: This directory contains all of the modules of code that\n    your project depends on (npm packages) are automatically installed.\n\n1.  **`/src`**: This directory will contain all of the code related to what you\n    will see on the front-end of your site.\n\n    - **data** this is where you’ll update your sidebar order and contents\n    - **images** you can colocate your images here or store them next to your\n      pages, whichver you chose\n    - **gatsby-theme-carbon** this is where you’ll override (known as shadowing)\n      the default `gatsby-theme-carbon` components\n    - **pages** This is where most of your content will live. You’ll represent\n      each page with an MDX file.\n\n1.  **`.gitignore`**: This file tells git which files it should not track / not\n    maintain a version history for.\n\n1.  **`gatsby-config.js`**: This is the main configuration file for a Gatsby\n    site. This is where you can specify information about your site (metadata)\n    like the site title and description. You’ll notice that all of the\n    configuration for the site is coming from `gatsby-theme-carbon`\n\n1.  **`LICENSE`**: Gatsby is licensed under the Apache 2.0 license.\n\n1.  **`yarn.lock`** (See `package.json` below, first). This is an automatically\n    generated file based on the exact versions of your npm dependencies that\n    were installed for your project. **(You won’t change this file directly).**\n\n1.  **`package.json`**: A manifest file for Node.js projects, which includes\n    things like metadata (the project’s name, author, etc). This manifest is how\n    npm knows which packages to install for your project.\n","fileAbsolutePath":"/Users/luciano/pot-workspace/my-carbon-site/src/pages/getting-started/index.mdx"}}},
    "staticQueryHashes": ["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}