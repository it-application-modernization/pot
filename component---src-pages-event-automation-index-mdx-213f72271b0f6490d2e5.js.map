{"version":3,"file":"component---src-pages-event-automation-index-mdx-213f72271b0f6490d2e5.js","mappings":"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","sources":["webpack://example/./src/pages/event-automation/index.mdx","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack://example/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://example/./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/luciano/pot-workspace/my-carbon-site/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`IBM Event Automation`}</h1>\n    <h2>{`Introduction`}</h2>\n    <p>{`IBM Event Automation, a fully composable solution, enables businesses to help meet and accelerate their event-driven efforts, wherever they are on their journey. The event distribution, event discovery and event processing capabilities help lay the foundation of an event-driven architecture for unlocking the value of events. `}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"../index.md#lab-section\"\n      }}>{`Return to main Lab section`}</a></p>\n    <h2>{`Lab PreReq`}</h2>\n    <p>{`Before starting the `}<strong parentName=\"p\">{`Event Automation labs`}</strong>{` make sure that you complete the following prereq setup. `}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Pre-req`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"EDA-Pre-lab/kafkasetup/kafka-connect.md\"\n            }}>{`Create Connection to Kafka cluster.`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Before starting the `}<strong parentName=\"td\">{`Event Automation labs`}</strong>{` make sure that you have completed this.  You will follow the steps to create Kafka connection and save credentials and certs for all EDA labs.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2>{`Lab Abstracts`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Subject`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"Kafka-Experience/index.mdx\"\n            }}>{`Kafka App Connect Experience`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`App Connect integration to Kafka`}</strong>{`  Kafka is a real time event streaming platform that enables you to publish/subscribe, store, and process events as they happen. App Connect provides a Kafka smart connector that enables you to connect to a number of supported Kafka implementations.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"Event_EndPoint/index.mdx\"\n            }}>{`Event Endpoint Experience`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`Integration with AsyncAPIâ€™s Event Endpoint Experience`}</strong>{`  Show how to create an Async API in `}<strong parentName=\"td\">{`IBM API Connect Manager`}</strong>{`, Produce events to IBM Event Streams using IBM App Connect Toolkit Flow, and finally run varies Consumers to read the events`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"Event-Authoring/index.mdx\"\n            }}>{`Event Automation Authoring Experience`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`Event Automation Experience`}</strong>{`  Define business scenarios in an intuitive, easy-to-use authoring canvas. Detect whenever they arise and start acting in real-time when it matters the most.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`|`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"../index.md#lab-section\"\n      }}>{`Return to main Lab section`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport * as styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageHeader-module--bx--text-truncate--end--b8JtW\";\nexport var bxTextTruncateFront = \"PageHeader-module--bx--text-truncate--front--WwZFh\";\nexport var darkMode = \"PageHeader-module--dark-mode--WCeH8\";\nexport var pageHeader = \"PageHeader-module--page-header--NqfPe\";\nexport var text = \"PageHeader-module--text--Er2EO\";\nexport var withTabs = \"PageHeader-module--with-tabs--vbQ-W\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"EditLink-module--bx--text-truncate--end--uI0cF\";\nexport var bxTextTruncateFront = \"EditLink-module--bx--text-truncate--front--HxjcS\";\nexport var link = \"EditLink-module--link--IDrl1\";\nexport var row = \"EditLink-module--row--BEmSX\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageTabs-module--bx--text-truncate--end--OC59x\";\nexport var bxTextTruncateFront = \"PageTabs-module--bx--text-truncate--front--5I6-L\";\nexport var link = \"PageTabs-module--link--Kz-7R\";\nexport var list = \"PageTabs-module--list--xLqxG\";\nexport var listItem = \"PageTabs-module--list-item--024o6\";\nexport var selectedItem = \"PageTabs-module--selected-item--aBB0K\";\nexport var tabsContainer = \"PageTabs-module--tabs-container--Cdfzw\";","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"last-modified-date-module--bx--text-truncate--end--QgCc7\";\nexport var bxTextTruncateFront = \"last-modified-date-module--bx--text-truncate--front--kel8a\";\nexport var row = \"last-modified-date-module--row--XJoYQ\";\nexport var text = \"last-modified-date-module--text--ogPQF\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","Object","assign","mdxType","parentName","isMDXComponent","title","theme","tabs","React","className","cx","length","id","relativePagePath","repository","repositoryProp","site","siteMetadata","useStaticQuery","baseUrl","subDirectory","branch","href","PageTabs","_React$Component","apply","arguments","_inheritsLoose","prototype","render","slug","this","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","Link","to","date","lastModified","Date","Row","Column","toLocaleDateString","day","year","month","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","PageHeader","label","Main","padded","EditLink","LastModifiedDate","NextPrevious","Utils"],"sourceRoot":""}